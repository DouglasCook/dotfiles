" -------------------------- VUNDLE SETUP ---------------------------------
filetype off

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin('~/.vim/bundle')

Plugin 'VundleVim/Vundle.vim'

Plugin 'scrooloose/nerdtree'
Plugin 'jistr/vim-nerdtree-tabs'

Plugin 'scrooloose/syntastic'
Plugin 'Valloric/YouCompleteMe'

Plugin 'bling/vim-airline'
Plugin 'ctrlpvim/ctrlp.vim'
Plugin 'Lokaltog/vim-easymotion'
Plugin 'wesQ3/vim-windowswap'
Plugin 'scrooloose/nerdcommenter'
Plugin 'tpope/vim-fugitive'

Plugin 'hdima/python-syntax'

Plugin 'pangloss/vim-javascript'
Plugin 'mxw/vim-jsx'

Plugin 'flazz/vim-colorschemes'
"Plugin 'gilgigilgil/anderson.vim.git'
"Plugin 'altercation/solarized'
"Plugin 'vim-scripts/TaskList.vim'

"Plugin 'derekwyatt/vim-scala'
"Plugin 'lambdatoast/elm.vim'

call vundle#end()            " required
filetype plugin on           " required


" ----------------------------- NORMAL STUFF ------------------------------
"
syntax on
colorscheme wombat256mod
set number			                " show line numbers

set tabstop=2
set shiftwidth=2
set expandtab			            " use spaces for tabs
set softtabstop=2             " for deleting multiple spaces at a time if they were a tab?

set cindent			                    " tries to auto indent C style code
set autoindent                      " keeps things indented?
set nosmartindent                   " supposed to stop python # comments from being pushed to left
set linebreak                       " stops lines from wrapping in the middle of words
set breakindent                     " use same level indentation on wrapped lines
set colorcolumn=80                  " highlight at 100 characters
filetype indent on
set guifont=Menlo:h12

set hidden                          " something to do with multiple buffers
set history=500                     " remember more previous commands

set wildmenu                        " fix autocomplete for opening files with :e
set wildmode=list:longest

set scrolloff=3                     " keep 3 lines visible around current line when scrolling

set hlsearch                        " start highlighting matches as they are typed
set incsearch
set smartcase                       " case insensitive search unless capitals are specified
set ignorecase

set backupdir=~/.vim/backup//       " this should put all swap files and backups in one folder
set directory=~/.vim/swp//

set modelines=0                     " something to do with a security flaw
set nocompatible
set encoding=utf-8

set noerrorbells                    " disable error noises/flashes
set novisualbell
set vb t_vb=

" reload vimrc automatically when it is saved
augroup reload_vimrc " {
    autocmd! bufwritepost .vimrc source %
augroup END " }

set tags=./tags;/                   " search up through directories for tags file

cd ./                               " set working directory

set foldmethod=indent
set foldnestmax=2      " when there are no classes involved this will just fold the methods


" ---------------------------- SHORTCUT MAPPINGS ----------------------------
" can't have inline commments here, whitespace after the mapping is added to it!
"
" get rid of highlighting
nnoremap <leader><space> :noh<CR>

" easier escape back to normal mode
inoremap jj <esc>

" saving
nnoremap <leader>s :w<CR>
cnoreabbrev W w

" quitting
nnoremap <leader>q :q<CR>

" stop the weird command history window from popping up when trying to quit
map q: :q

" get rid of annoying f1 help popup
:nmap <F1> <nop>
:imap <F1> <nop>

" strip all trailing whitespace and save
nnoremap <leader>a :let _s=@/<Bar>:%s/\s\+$//e<Bar>:let @/=_s<Bar>:nohl<CR>:w<CR>

" add a pdb breakpoint
function! InsertPdb()
    let trace = expand("import ipdb; ipdb.set_trace()")
    execute "normal o".trace
endfunction

nnoremap <leader>p :call InsertPdb()<CR>

" colour schemes
nnoremap <F2> :colorscheme wombat256mod<CR>
nnoremap <F3> :colorscheme kalisi<CR>
nnoremap <F4> :colorscheme solarized<CR>
nnoremap <F5> :colorscheme base16-ateliersulphurpool<CR>
nnoremap <F10> :let &background = ( &background == "dark"? "light" : "dark" )<CR>

" open ctag in new vertical split
"nnoremap <C-[> :vsp <CR>:exec("tag ".expand("<cword>"))<CR>

"TODO why doesn't the yank to clipboard work?
"nnoremap <leader>y "*y
"nnoremap <leader>u "*p


" ----------------------------- PLUGINS -----------------------------

"  NERDTREE 
"
map <leader>n :NERDTreeTabsToggle<CR>
map <leader>m :NERDTreeFind<CR>

"  AIRLINE 
"
"let g:airline_powerline_fonts = 1 
":let g:airline_theme='molokai'     " set airline theme for clearer bars (if using wombat)

"  SYNTASTIC 
"
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0
let g:syntastic_javascript_checkers = ['eslint']
let g:syntastic_go_checkers = ['go', 'gofmt', 'govet']

"  YOUCOMPLETEME 
"
let g:ycm_filetype_blacklist = {'sql': 1, 'csv': 1, 'txt': 1}

"  CTRLP 
"
" use the nearest .git directory as working directory
let g:ctrlp_working_path_mode = 'r'
let g:ctrlp_custom_ignore = '*.pyc'

nmap <C-j> :CtrlPBuffer<CR>
nmap <C-k> :CtrlPTag<CR>

" PYTHON SYNTAX PLUGIN
"
let python_highlight_all=1

" JSX SYNTAX
" use on all filetypes
let g:jsx_ext_required = 0
